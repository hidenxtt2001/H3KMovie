<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="iconList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="iconList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD6
        CgAAAk1TRnQBSQFMAgEBBAEAARgBAAEYAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABKAMAAQEBAAEgBgABMv8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wDUAAMDAQQDGAEdAzIBOgNRAVsDWgFlAz0BRgMgASYDCQEL/wAdAAMMAQ8DoAGrA+QB6QP8
        Af0M/wPuAfEDywHTA0EBSnQAAwkBCwMBAQIMAAMEAQYDCwEODwABAQMTARcDAQECNAADPAFlAz4BaAMG
        AQgsAANBAUoD6wHvA/MB9gOrAbUDZAFvAzcBQAMuATYDUAFaA5ABmwPhAeYD9gH4A3gBhAMLAQ4QAAMg
        ASYDqwG1A8QBzAPEAcwDxAHMA8QBzAPEAcwDxAHMA8QBzAPEAcwDxAHMA8QBzAPEAcwDxAHMA8QBzAPE
        AcwDvQHGA0wBVg8AAQEDZwFyA/YB+APtAfADLQE1BAADIAEmA9sB4QT/A2MBbggAA6QBrwT/A6wBtgMB
        AQIwAAP7Af8D+wH/A3QBvQMHAQokAAMmAS0D+QH7A/0B/gM0ATwYAAMEAQYDsQG7BP8DeAGEEAADdQGB
        QP8D2gHgDAADBgEIA8sB0wj/A2gBcwQAA3MBfgj/A7sBxAQAAw4BEQz/AxkBHjAAA/sB/wP7Af8D+wH/
        A40B0AMgAS4cAAMPARMD0AHXA90B4wMkASsgAAMPARIDsQG7A/cB+QNBAUsMAAN4AYRA/wPeAeQQAANf
        AWoD8QH0A+MB6AMpATAEAAMcASID1AHaA/oB/ANcAWcIAAObAaYE/wOhAawDAAEBHwABAQMFAQcDCgEN
        Aw4BEwMSARkD+wH/A/sB/wP7Af8D+wH/A6IB3gMcASgDAAEBFAADUQFcA/0B/gPUAdoDHgEkAwMBBBwA
        AxABFAOaAaUE/wPKAdIDCAEKCAADeAGEFP8D3QHjA6ABqwPyAfUE/wPGAc4DgwGPFP8D3gHkFAADAwEE
        EAADAQECAwQBBRAAAwgBChgAAwcBCgNFAXgDbgG3A4gBzQOPAdMDmgHZA6QB3wOyAeUD+wH/A/sB/wP7
        Af8D+wH/A/sB/wPPAfEDKQE/FAADxAHMCP8D7QHwA6oBtANCAUwDCAEKCAADAQECAygBLwN/AYsD2AHf
        CP8D7wHyAyEBJwgAA3gBhBT/A9oB4AMTARcDQQFKA3kBhQMNARADdwGDFP8D3gHkXAADJQE3A+MB+QP7
        Af8D+wH/A/sB/wP7Af8D+wH/A/sB/wP7Af8D+wH/A/sB/wP7Af8D+wH/A/sB/wOuAeMDIwE0DAADDwES
        GP8D9gH4A9sB4QPSAdkD6wHvGP8DQQFLCAADDQEQA6ABqhD/A/UB9wMqATEIAAMDAQQD3AHiEP8D5AHp
        AywBMxAAAzIBOgOqAbQDlgGhAxUBGgQAAwsBDgOLAZcDtAG9AzQBPAgAA10BaAO+AccDYwFuFAADPgFq
        A/sB/wP7Af8D+wH/A/sB/wP7Af8D+wH/A/sB/wP7Af8D+wH/A/sB/wP7Af8D+wH/A/sB/wP7Af8DlQHW
        AwcBCggAAyUBLED/A2IBbQwAAyMBKQPyAfUM/wPHAc8DDgERDAADaAFzA/oB/Az/A5sBphAAAwQBBQPJ
        AdEI/wNhAWwEAANpAXQI/wO0Ab0EAAMIAQoD/AH9CP8DEAEUEAADNQFVA/sB/wP7Af8D+wH/A/sB/wP7
        Af8D+wH/A/sB/wP7Af8D+wH/A/sB/wP7Af8D+wH/A/sB/wP7Af8DTAGHAwMBBAgAAxwBIhj/A+QB6QN5
        AYUDYgFtA7wBxRj/A1UBYAwAAzwBRQP5AfsI/wOJAZQDCAEKEAADAQECAzwBRQP4AfoI/wO3AcEDBAEF
        DAADAQECA5sBpgj/A0YBUAQAAzsBRAP8Af0E/wOLAZcEAAMDAQQD1QHbBP8D2wHhAwYBCBAAAxUBHQOD
        AcoDqgHhA7oB6gPVAfQD6QT7Af8D+wH/A/sB/wP7Af8D+wH/A/sB/wP7Af8D+wH/A1YBlxAAAwgBCgP1
        AfcQ/wPlAeoDHwElCAADBAEFA6cBsRD/A/wB/QM1AT0IAAMpATAD4wHoDP8D8QH0A94B5APeAeQDOQFC
        BAADqwG1A94B5APnAesM/wP3AfkDYgFtEAADAgEDA10BaANEAU4DAAEBCAADOgFDA2kBdAMLAQ4IAAMc
        ASEDdQGBAx8BJRcAAQEDBwEKAxABFQMWAR4DHAEoAyABLwMrAUIDOAFcA/sB/wP7Af8D+wH/A/sB/wP7
        Af8DWgGfAwgBCxQAA5sBphD/A5sBpgMAAQEMAAMnAS4D8gH1DP8D4wHoAxcBHAgAA3gBhBz/A4kBlAML
        AQ4D9gH4GP8D3gHkfAAD+wH/A/sB/wP7Af8D+wH/A1UBmBwAAzEBOQPzAfYM/wOPAZoQAAMgASYD7wHy
        DP8DnQGoAwMBBAgAA3gBhBz/A9QB2gOXAaIc/wPeAeQQAAMRARUDVwFiA00BVwMGAQgHAAEBA0UBTwNd
        AWgDFQEZCAADKQEwA2MBbgMsATM0AAP7Af8D+wH/A+wB/ANAAWwgAAMDAQQDsgG8DP8D1AHaAwsBDgwA
        A2ABawz/A+sB7wMMAQ8MAAN4AYRA/wPeAeQPAAEBA7EBuwj/A04BWAQAA0gBUgj/A5gBowgAA+cB6wT/
        A+4B8QMCAQMwAAONAdEDkwHUAy8BSQMCAQMkAAMPARIDtgG/CP8D/AH9A6oBtANIAVIDMgE6A38BiwP1
        AfcI/wP4AfoDQAFJEAADXQFoQP8DtQG+DAADAwEEA8AByAj/A1oBZQQAA1wBZwj/A6kBswQAAwUBBwPy
        AfUE/wP2AfgDDQEQNAADAQECMAADEQEVA7cBwAPyAfUY/wP9Af4D0QHYAywBNBQAAwMBBANfAWoDiQGU
        A4kBlQOJAZUDiQGVA4kBlQOJAZUDiQGVA4kBlQOJAZUDiQGVA4kBlQOJAZUDiQGVA4kBlQN7AYcDFAEY
        EAADKgExA7wBxQOuAbgDEQEVBAADAwEEA5oBpQPHAc8DMQE5CAADXgFpA8kB0QNlAXBwAAMDAQQDMwE7
        A5sBpgPzAfYI/wP9Af4DwQHJA1MBXgMPARN0AAMCAQMDAAEBDwABAQMDAQQQAAMEAQaAAAMEAQYDGAEd
        Ax8BJQMLAQ7/AP8AAgABQgFNAT4HAAE+AwABKAMAAVADAAEoAwABAQEAAQEFAAHgAQEWAAP/8QAK/wIA
        A/8BwAE/Bf8CAAP/AYABHwP/ATkBxwIAAf8BxwH/AQABBwGAAQABHAEQAcMCAAH/AcMB/gEfAYcBgAEA
        ARwBEAGDAgAB/wHBAfwBPwHDAYABAAEeARABwwIAAfgBAAF8AR8BwQGAAQABHwF5Ae8CAAHAAQABfAEG
        AQEBgAEAAR8C/wIAAcABAAE4AQABAQGAAWABHgEQAccCAAHAAQABGAEAAQEBwAFwATwBEAGDAgABwAEA
        ARgBAAEBAcAB8AEcARABgwIAAcABAAF4AQYBAQGAASABHgEYAccCAAHAAQABfAEHAQEBgAEAAR8C/wIA
        Af8BwQH8AQ8BAQGAAQABHgEQAccCAAH/AcMB/AEHAQMBgAEAARwBEAHDAgAB/wHDAf4BAAEHAYABAAEc
        ARABgwIAAf8B7wH/AQABDwGAAQABHgEQAccCAAP/AYABHwP/ATkB7wIAA/8B8Ab/AgAK/wIACw==
</value>
  </data>
</root>