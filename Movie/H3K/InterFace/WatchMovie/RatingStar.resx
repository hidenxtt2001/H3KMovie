<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="icon_star.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="icon_star.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABq
        DAAAAk1TRnQBSQFMAgEBAwEAASgBAAEoAQABIAEAASABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAGA
        AwABIAMAAQEBAAEgBgABQP8A/wD/AP8AMgADQAFvAyoBQDgAAyoBQQNAAW44AANXAakDQAFxOAADKgFB
        A0ABbjgAAzwBZgMrAUI4AAMrAUIDPAFmuAADOwFjBP8DWwGyAxcBICgAAxgBIQNbAbIE/wM6AWI4AANR
        AZoE/wOTAeMDJAE2KAADGAEhA1sBsgT/AzoBYjgAAzcBWgT/A1QBogMSARkoAAMSARkDVAGiBP8DNgFZ
        uAADIAEvCP8DyQH1A0QBewMFAQcYAAMFAQcDRAF7A8wB9gj/AyABLjgAAzEBTgj/A/YB/gNaAbADBwEJ
        GAADBQEHA0QBewPMAfYI/wMgAS44AAMbASYI/wO7AfEDPAFmAwEBAhgAAwEBAgM8AWYDuwHxCP8DGgEl
        uAADBAEFA9QB9wz/A3UB0gMoATwQAAMoATwDdQHSDP8D1AH3AwQBBTgAAwUBBxD/A8kB9QM6AWIQAAMo
        ATwDdQHSDP8D1AH3AwQBBTgAAwEBAgO2AfAM/wNrAckDIgEyEAADIgEyA2wBygz/A7YB8AMAAQG8AANp
        AccE/wNFAXwDdAHQCP8DVgGoAxMBGgMUARsDVwGpCP8DdAHQA0UBfQT/A2gBxkAAA7sB8RT/A34B2QMc
        ASgDFAEbA1cBqQj/A3QB0ANFAX0E/wNoAcZAAANhAb0Q/wPnAfwDTQGRAwwBEAMMARADTQGRA+cB/BD/
        A2EBvMAAA04BkwT/A0MBdwMDAQQDQAFwA7sB8QT/A78B8gO/AfIE/wO7AfEDQAFvAwMBBANDAXgE/wNN
        AZJAAANuAc0Y/wP2Af4DvwHyBP8DuwHxA0ABbwMDAQQDQwF4BP8DTQGSQAADSQGIGP8DqgHsA64B7Rj/
        A0kBh8AAAzkBXwT/A1cBqwgAAxMBGgNWAacI/wNVAaYDEwEaCAADWAGsBP8DOAFeQAADTgGVIP8DVQGm
        AxMBGggAA1gBrAT/AzgBXkAAAzUBVjj/AzUBVcAAAx4BKwT/A4cB3xAAAywBQwMsAUMQAAOMAeAE/wMd
        ASpAAAMuAUcc/wMsAUMQAAOMAeAE/wMdASpAAAMYASI4/wMYASHAAAMDAQQDyQH1A/YB/gMNARIgAAMN
        ARID9gH+A8kB9QMDAQRAAAMEAQUD9gH+GP8QAAMNARID9gH+A8kB9QMDAQRDAAEBA7AB7jD/A64B7QMA
        AQHEAANlAcIE/wMuAUggAAMvAUkE/wNiAcFIAAOwAe4Y/xAAAy8BSQT/A2IBwUgAA18BujD/A18BucQA
        AwwBEANzAdEE/wNFAXwgAANFAX0E/wNzAdEDCwEPQAADEwEaA8kB9Rj/EAADRQF9BP8DcwHRAwsBD0AA
        AwgBCwNsAcgw/wNsAcgDCAELvAADDAEQA2gBxgT/A5sB5gMfAS0gAAMfAS0DnQHnBP8DaAHFAwwBEDgA
        AxMBGgO2AfAc/xAAAx8BLQOdAecE/wNoAcUDDAEQOAADCAELA2ABuzj/A18BugMIAQu0AAMQARYDcgHP
        BP8DhwHfAxkBIygAAxoBJAOHAd8E/wNyAc8DEAEWMAADGwEmA8YB9CD/FAADGgEkA4cB3wT/A3IBzwMQ
        ARYwAAMNAREDaAHGQP8DaAHGAw0BEawAAxIBGQN3AdQE/wN7AdYDFAEbMAADFAEcA3sB1gT/A3YB0wMS
        ARkoAAMgAS4D1AH3JP8YAAMUARwDewHWBP8DdgHTAxIBGSgAAxEBFwNzAdFI/wN0AdADEQEXpAADGAEh
        A4YB3AT/A20BzAMPARQ4AAMQARUDbgHNBP8DhgHcAxcBICAAAygBPAPfAfoo/xwAAxABFQNuAc0E/wOG
        AdwDFwEgIAADFgEfA4IB2lD/A4IB2gMWAR+cAAMiATEDowHqBP8DjAHgAyIBMgMHAQk4AAMHAQkDIgEy
        A4wB4AT/A58B6QMhATAYAAMyAVED8QH9LP8cAAMHAQkDIgEyA4wB4AT/A58B6QMhATAYAAMcASgDjwHi
        WP8DjwHiAxwBKJQAAycBOgOwAe8U/wOoAesDdAHQA1sBswNOAZUDJAE1EAADJAE1A04BlgNbAbMDdAHQ
        A6gB6xT/A7AB7wMmATkQAAM6AWED9gH+MP8IAAMkATUDTgGWA1sBswN0AdADqAHrFP8DsAHvAyYBORAA
        AyIBMgOjAepg/wOjAeoDIgExkAADMgFQA0IBdgNNAZEDWQGuA2wByAOYAeUD5wH8EP8DXQG1EAADXQG2
        EP8D5wH8A5gB5QNsAcgDWQGuA00BkQNCAXYDMgFQEAADSAGGA10BtQN0AdADmAHlA8IB8wPnAfwg/wgA
        A10BthD/A+cB/AOYAeUDbAHIA1kBrgNNAZEDQgF2AzIBUBAAAzEBTwNCAXUDTQGRA1gBrQNpAccDkgHk
        A+IB+zj/A+IB+wOSAeQDaAHGA1gBrQNNAZEDQgF1AzEBT6gAAwMBBAMUARsDJgE5AzUBVQPUAfcD8QH9
        AxoBJAgAAxoBJAPxAf0DzAH2AzUBVQMmATkDFAEbAwMBBEAAAwUBBwMiATIDOwFkA0oBixD/BAADGgEk
        A/EB/QPMAfYDNQFVAyYBOQMUARsDAwEEQAADAgEDAxMBGgMlATcDMgFRA78B8hj/A7sB8QMyAVEDJQE3
        AxMBGgMCAQPQAANUAaIE/wNKAYkIAANKAYoE/wNTAaFgAAN+AdkM/wQAA0oBigT/A1MBoWAAA08Blxj/
        A04BluAAAyUBNwT/A6oB7AMHAQkDBwEJA6oB7AT/AyQBNmAAAzcBWgz/AwcBCQOqAewE/wMkATZgAAMf
        AS0Y/wMfAS3kAANxAc4E/wM7AWMDOwFkBP8DbgHNaAADwgHzCP8DOwFkBP8DbgHNaAADYwG+EP8DYQG9
        6AADOAFcBP8DcwHRA3UB0gT/AzcBW2gAA00BkQj/A3UB0gT/AzcBW2gAAzMBUxD/AzMBUugAAwYBCAOo
        AesI/wOoAesDBgEIaAADCgENA/EB/Qj/A6gB6wMGAQhoAAMEAQUDmAHlCP8DjwHiAwMBBOwAA0kBhwj/
        A0gBhnAAA2IBwQj/A0gBhnAAA0QBewj/A0QBevAAAxUBHQPiAfsD4gH7AxQBHHAAAyIBMQT/A+IB+wMU
        ARxwAAMRARcD3AH5A9gB+AMRARf0AANaAbADWgGveAADjwHiA1oBr3gAA1QBogNTAaH4AAMtAUUDLAFE
        eAADPgFqAywBRHgAAyMBMwMiATL7AAEBfwABAf8A/wD/AEMAAUIBTQE+BwABPgMAASgDAAGAAwABIAMA
        AQEBAAEBBgABAhYAA/8BAAz/BAAM/wQAAf4BfwH+AX8B/gF/Af4BfwH+AX8B/gF/BAAB/gEfAfgBfwH+
        AR8B+AF/Af4BHwH4AX8EAAH+AQcB4AF/Af4BBwHgAX8B/gEHAeABfwQAAf4BAwHAAX8B/gEDAcABfwH+
        AQMBwAF/BAAB/wIAAv8CAAL/AgAB/wQAAf8CAAL/AgAC/wIAAf8EAAH/AhgC/wEAARgC/wIAAf8EAAH/
        AR4BeAL/AQABeAL/AgAB/wQAAf8BDwHwAv8BAAHwAv8CAAH/BAAB/wGPAfEC/wGAAfEC/wGAAQEB/wQA
        Af8BDwHwAv8BAAHwAv8CAAH/BAAB/gEPAfABfwH+AQAB8AF/Af4CAAF/BAAB/AEfAfgBPwH8AQAB+AE/
        AfwCAAE/BAAB+AE/AfwBHwH4AQAB/AEfAfgCAAEfBAAB8AF/Af4BDwHwAQAB/gEPAfACAAEPBAAB4AF/
        Af4BBwHgAQAB/gEHAeACAAEHBAABwAEDAcABAwHAAQABwAEDAcACAAEDBAABwAEDAcABAwHAAQABwAED
        AcACAAEDBAAB/wEBAYAC/wEAAYAC/wIAAf8EAAH/AfEBjwL/AfABjwL/AfABDwH/BAAB/wHwAQ8C/wHw
        AQ8C/wHwAQ8B/wQAAf8B+AEfAv8B+AEfAv8B+AEfAf8EAAH/AfgBHwL/AfgBHwL/AfgBHwH/BAAB/wH4
        AR8C/wH4AR8C/wH4AR8B/wQAAf8B/AE/Av8B/AE/Av8B/AE/Af8EAAH/AfwBPwL/AfwBPwL/AfwBPwH/
        BAAB/wH+AX8C/wH+AX8C/wH+AX8B/wQAAf8B/gF/Av8B/gF/Av8B/gF/Af8EAAH/Af4D/wH+Bv8EAAz/
        BAAL
</value>
  </data>
</root>